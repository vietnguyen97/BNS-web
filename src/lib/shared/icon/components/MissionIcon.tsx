import React from "react";
import Icon from "@ant-design/icons";
import { IconComponentProps } from "@ant-design/icons/lib/components/Icon";

const MissionSvg = (
    props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>
) => (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        width="68"
        height="68"
        viewBox="0 0 68 68"
        fill="none"
        {...props}
    >
        <rect width="68" height="68" rx="34" fill="#DC294F" />
        <path
            d="M46.227 38.4803L35.0003 39.7337V25.0403C35.9603 26.8937 36.8803 29.5337 36.7203 32.6803C36.6537 33.9337 36.4136 35.187 36.027 36.4137C35.9203 36.7337 35.987 37.0937 36.2137 37.3603C36.4003 37.587 36.6803 37.7203 36.9737 37.7203C37.0137 37.7203 37.067 37.707 37.107 37.707C38.6136 37.5203 40.0137 37.3203 41.4137 37.1337C42.947 36.9203 44.4937 36.707 46.1603 36.4937C46.227 36.4937 46.2937 36.4537 46.347 36.427C46.4137 36.4137 46.467 36.4003 46.5203 36.3737C46.587 36.3337 46.627 36.2937 46.6803 36.2403C46.7337 36.2003 46.787 36.1737 46.8136 36.1203C46.8536 36.0803 46.8803 36.0137 46.907 35.947C46.9336 35.8937 46.9737 35.8537 47.0003 35.787C47.0137 35.7203 47.0137 35.6537 47.0137 35.587C47.0137 35.5203 47.0403 35.467 47.027 35.4003V35.387C47.027 35.387 47.027 35.387 47.027 35.3737C46.7336 32.507 45.7337 29.7737 44.1337 27.467C41.0137 22.9737 36.6003 21.2937 34.2537 20.6937C34.2137 20.6803 34.1737 20.6937 34.1337 20.6937C34.0803 20.6803 34.0403 20.667 34.0003 20.667C33.987 20.667 33.987 20.667 33.9737 20.667C33.947 20.667 33.9336 20.6803 33.907 20.6803C33.8536 20.6803 33.8137 20.707 33.7603 20.7203C33.707 20.7337 33.6537 20.7337 33.6003 20.7603C33.5737 20.7603 33.5603 20.787 33.5337 20.8003C33.4937 20.8137 33.467 20.8403 33.427 20.867C33.387 20.907 33.3336 20.9203 33.2803 20.9737C33.267 20.987 33.2536 21.0137 33.2403 21.027C33.2136 21.067 33.187 21.107 33.1603 21.1603C33.1337 21.2003 33.0937 21.2403 33.0803 21.2937C33.067 21.307 33.067 21.307 33.067 21.3203C31.7336 24.8537 30.0536 28.267 28.067 31.467C26.7336 33.627 25.2403 35.707 23.627 37.667C23.3603 37.987 23.3203 38.427 23.5203 38.787C23.707 39.107 24.0403 39.307 24.4003 39.307C24.4403 39.307 24.4937 39.2937 24.5337 39.2937L33.0003 38.1603V39.9603L21.5603 41.227C21.5337 41.227 21.5203 41.227 21.4937 41.2403C21.0137 41.3203 20.667 41.7337 20.667 42.2137C20.667 45.0403 22.9603 47.3337 25.7736 47.3337H38.6536C40.1336 47.3337 41.547 46.6803 42.507 45.547L46.147 41.2403L47.0937 40.1203C47.3603 39.8137 47.4137 39.3737 47.2137 39.0137C47.027 38.6537 46.6403 38.4403 46.227 38.4803Z"
            fill="white"
        />
    </svg>
);

export const MissionIcon = (
    props: JSX.IntrinsicAttributes &
        Pick<
            IconComponentProps,
            | "max"
            | "required"
            | "type"
            | "data"
            | "default"
            | "high"
            | "low"
            | "key"
            | "id"
            | "media"
            | "height"
            | "width"
            | "start"
            | "open"
            | "name"
            | "color"
            | "content"
            | "rotate"
            | "translate"
            | "value"
            | "hidden"
            | "cite"
            | "dir"
            | "form"
            | "label"
            | "slot"
            | "span"
            | "style"
            | "summary"
            | "title"
            | "pattern"
            | "acceptCharset"
            | "action"
            | "method"
            | "noValidate"
            | "target"
            | "accessKey"
            | "draggable"
            | "lang"
            | "className"
            | "prefix"
            | "ariaLabel"
            | "children"
            | "contentEditable"
            | "inputMode"
            | "nonce"
            | "tabIndex"
            | "async"
            | "disabled"
            | "multiple"
            | "size"
            | "manifest"
            | "wrap"
            | "src"
            | "accept"
            | "allowFullScreen"
            | "allowTransparency"
            | "alt"
            | "as"
            | "autoComplete"
            | "autoFocus"
            | "autoPlay"
            | "capture"
            | "cellPadding"
            | "cellSpacing"
            | "charSet"
            | "challenge"
            | "checked"
            | "classID"
            | "cols"
            | "colSpan"
            | "controls"
            | "coords"
            | "crossOrigin"
            | "dateTime"
            | "defer"
            | "download"
            | "encType"
            | "formAction"
            | "formEncType"
            | "formMethod"
            | "formNoValidate"
            | "formTarget"
            | "frameBorder"
            | "headers"
            | "href"
            | "hrefLang"
            | "htmlFor"
            | "httpEquiv"
            | "integrity"
            | "keyParams"
            | "keyType"
            | "kind"
            | "list"
            | "loop"
            | "marginHeight"
            | "marginWidth"
            | "maxLength"
            | "mediaGroup"
            | "min"
            | "minLength"
            | "muted"
            | "optimum"
            | "defaultChecked"
            | "defaultValue"
            | "suppressContentEditableWarning"
            | "suppressHydrationWarning"
            | "contextMenu"
            | "placeholder"
            | "spellCheck"
            | "radioGroup"
            | "role"
            | "about"
            | "datatype"
            | "inlist"
            | "property"
            | "resource"
            | "typeof"
            | "vocab"
            | "autoCapitalize"
            | "autoCorrect"
            | "autoSave"
            | "itemProp"
            | "itemScope"
            | "itemType"
            | "itemID"
            | "itemRef"
            | "results"
            | "security"
            | "unselectable"
            | "is"
            | "aria-activedescendant"
            | "aria-atomic"
            | "aria-autocomplete"
            | "aria-busy"
            | "aria-checked"
            | "aria-colcount"
            | "aria-colindex"
            | "aria-colspan"
            | "aria-controls"
            | "aria-current"
            | "aria-describedby"
            | "aria-details"
            | "aria-disabled"
            | "aria-dropeffect"
            | "aria-errormessage"
            | "aria-expanded"
            | "aria-flowto"
            | "aria-grabbed"
            | "aria-haspopup"
            | "aria-hidden"
            | "aria-invalid"
            | "aria-keyshortcuts"
            | "aria-label"
            | "aria-labelledby"
            | "aria-level"
            | "aria-live"
            | "aria-modal"
            | "aria-multiline"
            | "aria-multiselectable"
            | "aria-orientation"
            | "aria-owns"
            | "aria-placeholder"
            | "aria-posinset"
            | "aria-pressed"
            | "aria-readonly"
            | "aria-relevant"
            | "aria-required"
            | "aria-roledescription"
            | "aria-rowcount"
            | "aria-rowindex"
            | "aria-rowspan"
            | "aria-selected"
            | "aria-setsize"
            | "aria-sort"
            | "aria-valuemax"
            | "aria-valuemin"
            | "aria-valuenow"
            | "aria-valuetext"
            | "viewBox"
            | "playsInline"
            | "poster"
            | "preload"
            | "readOnly"
            | "rel"
            | "reversed"
            | "rows"
            | "rowSpan"
            | "sandbox"
            | "scope"
            | "scoped"
            | "scrolling"
            | "seamless"
            | "selected"
            | "shape"
            | "sizes"
            | "srcDoc"
            | "srcLang"
            | "srcSet"
            | "step"
            | "useMap"
            | "wmode"
            | "dangerouslySetInnerHTML"
            | "onCopy"
            | "onCopyCapture"
            | "onCut"
            | "onCutCapture"
            | "onPaste"
            | "onPasteCapture"
            | "onCompositionEnd"
            | "onCompositionEndCapture"
            | "onCompositionStart"
            | "onCompositionStartCapture"
            | "onCompositionUpdate"
            | "onCompositionUpdateCapture"
            | "onFocus"
            | "onFocusCapture"
            | "onBlur"
            | "onBlurCapture"
            | "onChange"
            | "onChangeCapture"
            | "onBeforeInput"
            | "onBeforeInputCapture"
            | "onInput"
            | "onInputCapture"
            | "onReset"
            | "onResetCapture"
            | "onSubmit"
            | "onSubmitCapture"
            | "onInvalid"
            | "onInvalidCapture"
            | "onLoad"
            | "onLoadCapture"
            | "onError"
            | "onErrorCapture"
            | "onKeyDown"
            | "onKeyDownCapture"
            | "onKeyPress"
            | "onKeyPressCapture"
            | "onKeyUp"
            | "onKeyUpCapture"
            | "onAbort"
            | "onAbortCapture"
            | "onCanPlay"
            | "onCanPlayCapture"
            | "onCanPlayThrough"
            | "onCanPlayThroughCapture"
            | "onDurationChange"
            | "onDurationChangeCapture"
            | "onEmptied"
            | "onEmptiedCapture"
            | "onEncrypted"
            | "onEncryptedCapture"
            | "onEnded"
            | "onEndedCapture"
            | "onLoadedData"
            | "onLoadedDataCapture"
            | "onLoadedMetadata"
            | "onLoadedMetadataCapture"
            | "onLoadStart"
            | "onLoadStartCapture"
            | "onPause"
            | "onPauseCapture"
            | "onPlay"
            | "onPlayCapture"
            | "onPlaying"
            | "onPlayingCapture"
            | "onProgress"
            | "onProgressCapture"
            | "onRateChange"
            | "onRateChangeCapture"
            | "onSeeked"
            | "onSeekedCapture"
            | "onSeeking"
            | "onSeekingCapture"
            | "onStalled"
            | "onStalledCapture"
            | "onSuspend"
            | "onSuspendCapture"
            | "onTimeUpdate"
            | "onTimeUpdateCapture"
            | "onVolumeChange"
            | "onVolumeChangeCapture"
            | "onWaiting"
            | "onWaitingCapture"
            | "onAuxClick"
            | "onAuxClickCapture"
            | "onClick"
            | "onClickCapture"
            | "onContextMenu"
            | "onContextMenuCapture"
            | "onDoubleClick"
            | "onDoubleClickCapture"
            | "onDrag"
            | "onDragCapture"
            | "onDragEnd"
            | "onDragEndCapture"
            | "onDragEnter"
            | "onDragEnterCapture"
            | "onDragExit"
            | "onDragExitCapture"
            | "onDragLeave"
            | "onDragLeaveCapture"
            | "onDragOver"
            | "onDragOverCapture"
            | "onDragStart"
            | "onDragStartCapture"
            | "onDrop"
            | "onDropCapture"
            | "onMouseDown"
            | "onMouseDownCapture"
            | "onMouseEnter"
            | "onMouseLeave"
            | "onMouseMove"
            | "onMouseMoveCapture"
            | "onMouseOut"
            | "onMouseOutCapture"
            | "onMouseOver"
            | "onMouseOverCapture"
            | "onMouseUp"
            | "onMouseUpCapture"
            | "onSelect"
            | "onSelectCapture"
            | "onTouchCancel"
            | "onTouchCancelCapture"
            | "onTouchEnd"
            | "onTouchEndCapture"
            | "onTouchMove"
            | "onTouchMoveCapture"
            | "onTouchStart"
            | "onTouchStartCapture"
            | "onPointerDown"
            | "onPointerDownCapture"
            | "onPointerMove"
            | "onPointerMoveCapture"
            | "onPointerUp"
            | "onPointerUpCapture"
            | "onPointerCancel"
            | "onPointerCancelCapture"
            | "onPointerEnter"
            | "onPointerEnterCapture"
            | "onPointerLeave"
            | "onPointerLeaveCapture"
            | "onPointerOver"
            | "onPointerOverCapture"
            | "onPointerOut"
            | "onPointerOutCapture"
            | "onGotPointerCapture"
            | "onGotPointerCaptureCapture"
            | "onLostPointerCapture"
            | "onLostPointerCaptureCapture"
            | "onScroll"
            | "onScrollCapture"
            | "onWheel"
            | "onWheelCapture"
            | "onAnimationStart"
            | "onAnimationStartCapture"
            | "onAnimationEnd"
            | "onAnimationEndCapture"
            | "onAnimationIteration"
            | "onAnimationIterationCapture"
            | "onTransitionEnd"
            | "onTransitionEndCapture"
            | "spin"
            | "component"
        > &
        React.RefAttributes<HTMLSpanElement>
) => <Icon component={MissionSvg} {...props} />;
